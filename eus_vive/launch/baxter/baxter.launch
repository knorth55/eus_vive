<launch>
  <arg name="head" default="true" />
  <arg name="respeaker" default="true" />
  <arg name="logging" default="true" />
  <arg name="twitter" default="true" />
  <arg name="influxdb" default="true" />
  <arg name="debug" default="false" />
  <arg name="home_dir" default="$(env HOME)" />
  <arg name="mask_rcnn" default="false" />
  <arg name="custom_xdisplay" default="true" />
  <arg name="launch_xdisplay" default="false" />
  <arg name="realsense_camera" default="false" />
  <arg name="spherical_camera" default="true" />
  <arg name="spherical_stereo" default="true" />
  <arg name="lgripper_type" default="softhand" />
  <arg name="rgripper_type" default="softhand" />

  <!-- baxter control -->
  <arg name="arm_interpolation" default="bezier_with_velocity" />
  <arg name="arm_control_mode" default="velocity" />
  <arg name="moveit" default="false" />

  <!-- gripper and display-->
  <arg name="finger" default="standard_narrow" />
  <arg name="finger_tip" default="paddle_tip" />
  <arg name="xdisplay_max_width" default="1024" unless="$(arg custom_xdisplay)" />
  <arg name="xdisplay_max_width" default="1920" if="$(arg custom_xdisplay)" />
  <arg name="xdisplay_max_height" default="600" unless="$(arg custom_xdisplay)" />
  <arg name="xdisplay_max_height" default="1200" if="$(arg custom_xdisplay)" />
  <arg name="lgripper_visualize" value="true"
       if="$(eval arg('lgripper_type') == 'parallel')" />
  <arg name="lgripper_visualize" value="false"
       if="$(eval arg('lgripper_type') in ['softhand', 'softhand-v2'])" />
  <arg name="rgripper_visualize" value="true"
       if="$(eval arg('rgripper_type') == 'parallel')" />
  <arg name="rgripper_visualize" value="false"
       if="$(eval arg('rgripper_type') in ['softhand', 'softhand-v2'])" />

  <!-- camera -->
  <arg name="camera_ns" default="realsense_torso" />
  <arg name="camera_type" default="l515" />
  <arg name="spherical_camera_ns" default="kodak_head" />
  <arg name="spherical_left_camera_ns" default="elp_head_left" />
  <arg name="spherical_right_camera_ns" default="elp_head_right" />
  <arg name="twitter_image_topic" value="/$(arg spherical_camera_ns)/image_raw"
       unless="$(arg spherical_stereo)" />
  <arg name="twitter_image_topic" value="/$(arg spherical_left_camera_ns)/image_raw"
       if="$(arg spherical_stereo)" />

  <param name="robot_description"
         command="$(find xacro)/xacro --inorder $(find eus_vive)/urdf/baxter.urdf.xacro
                  gazebo:=false finger:=$(arg finger) finger_tip:=$(arg finger_tip)
                  left_electric_gripper:=$(arg lgripper_visualize)
                  right_electric_gripper:=$(arg rgripper_visualize)" />

  <param name="robot_description_semantic"
         command="$(find xacro)/xacro --inorder
                  $(find baxter_moveit_config)/config/baxter.srdf.xacro
                  left_electric_gripper:=$(arg lgripper_visualize)
                  left_tip_name:=left_gripper 
                  right_electric_gripper:=$(arg rgripper_visualize)
                  right_tip_name:=right_gripper" />


  <!-- launch baxter -->
  <include file="$(find jsk_baxter_startup)/baxter.launch">
    <arg name="load_robot_description" value="false" />
    <arg name="launch_robot_state_publisher" value="true" />
    <arg name="sanity_check_joint_trajectory" value="false" />
    <arg name="launch_moveit" value="$(arg moveit)" />
    <arg name="launch_time_signal" value="false" />
    <arg name="launch_db" value="false"/>
    <arg name="launch_twitter" value="false"/>
    <arg name="launch_gripper_action" value="true" />
    <arg name="left_electric_gripper" value="true" />
    <arg name="right_electric_gripper" value="true" />
    <arg name="arm_interpolation" value="$(arg arm_interpolation)" />
    <arg name="arm_control_mode" value="$(arg arm_control_mode)" />
  </include>

  <!-- launch softhands -->
  <group ns="lgripper" if="$(eval arg('lgripper_type') in ['softhand', 'softhand-v2'])">
    <include file="$(find softhand_ros)/launch/softhand_left.launch"
             if="$(eval arg('lgripper_type') == 'softhand')"/>
    <include file="$(find softhand_ros)/launch/softhand_v2_left.launch"
             if="$(eval arg('lgripper_type') == 'softhand-v2')"/>
  </group>
  <group ns="rgripper" if="$(eval arg('rgripper_type') in ['softhand', 'softhand-v2'])">
    <include file="$(find softhand_ros)/launch/softhand_right.launch"
             if="$(eval arg('rgripper_type') == 'softhand')"/>
    <include file="$(find softhand_ros)/launch/softhand_v2_right.launch"
             if="$(eval arg('rgripper_type') == 'softhand-v2')"/>
  </group>

  <!-- launch realsense camera -->
  <group if="$(arg realsense_camera)">
    <!-- realsense head -->
    <!-- TODO(knorth55): add realsense launch for head -->
    <!--
    <node name="realsense_transform_publisher" pkg="tf" type="static_transform_publisher"
          args="0.05 0.05 0.1 -1.5 -0.6 0.0 head_camera $(arg camera_ns)_link 100" />
    -->
    <!-- realsense torso -->
    <include file="$(find eus_vive)/launch/baxter/baxter_realsense_torso.launch">
      <arg name="camera_ns" value="$(arg camera_ns)" />
      <arg name="camera_type" value="$(arg camera_type)" />
      <arg name="launch_transformable_server" value="true" />
    </include>
  </group>

  <!-- launch spherical camera -->
  <group if="$(arg spherical_camera)">
    <!-- launch elp camera -->
    <group if="$(arg spherical_stereo)">
      <!-- launch elp left camera on c1 -->
      <node name="elp_left_transform_publisher" pkg="tf" type="static_transform_publisher"
            args="0.032 0.05 0.1 -1.5 -0.6 0.0 head_camera $(arg spherical_left_camera_ns)_link 100" />
      <node name="elp_left_optical_frame_transform_publisher" pkg="tf" type="static_transform_publisher"
            args="0 0 0 -1.57 0 -1.57 $(arg spherical_left_camera_ns)_link $(arg spherical_left_camera_ns)_optical_frame 100" />
      <node name="elp_left_rviz_frame_transform_publisher" pkg="tf" type="static_transform_publisher"
            args="0 0 0 3.14 0 0 $(arg spherical_left_camera_ns)_link $(arg spherical_left_camera_ns)_rviz_frame 100" />
      <include file="$(find eus_vive)/launch/include/elp_usb.launch">
        <arg name="camera_name" value="$(arg spherical_left_camera_ns)" />
        <arg name="machine" value="baxter-c1" />
        <arg name="load_machinepath" value="true" />
        <arg name="machinepath" value="$(find eus_vive)/launch/baxter/baxter.machine" />
      </include>
      <!-- launch elp right camera on c4 -->
      <node name="elp_right_transform_publisher" pkg="tf" type="static_transform_publisher"
            args="-0.032 0.05 0.1 -1.5 -0.6 0.0 head_camera $(arg spherical_right_camera_ns)_link 100" />
      <node name="elp_right_optical_frame_transform_publisher" pkg="tf" type="static_transform_publisher"
            args="0 0 0 -1.57 0 -1.57 $(arg spherical_right_camera_ns)_link $(arg spherical_right_camera_ns)_optical_frame 100" />
      <node name="elp_right_rviz_frame_transform_publisher" pkg="tf" type="static_transform_publisher"
            args="0 0 0 3.14 0 0 $(arg spherical_right_camera_ns)_link $(arg spherical_right_camera_ns)_rviz_frame 100" />
      <include file="$(find eus_vive)/launch/include/elp_usb.launch">
        <arg name="camera_name" value="$(arg spherical_right_camera_ns)" />
        <arg name="machine" value="localhost" />
        <arg name="load_machinepath" value="true" />
        <arg name="machinepath" value="$(find eus_vive)/launch/baxter/baxter.machine" />
      </include>
    </group>
    <!-- launch kodak camera -->
    <group unless="$(arg spherical_stereo)">
      <node name="kodak_transform_publisher" pkg="tf" type="static_transform_publisher"
            args="0.05 0.05 0.1 -1.5 -0.6 0.0 head_camera $(arg spherical_camera_ns)_link 100" />
      <node name="kodak_optical_frame_transform_publisher" pkg="tf" type="static_transform_publisher"
            args="0 0 0 0 0 1.57 $(arg spherical_camera_ns)_link $(arg spherical_camera_ns)_optical_frame 100" />
      <node name="kodak_rviz_frame_transform_publisher" pkg="tf" type="static_transform_publisher"
            args="0 0 0 3.14 0 0 $(arg spherical_camera_ns)_link $(arg spherical_camera_ns)_rviz_frame 100" />
      <include file="$(find eus_vive)/launch/include/kodak_pixpro.launch">
        <arg name="camera_name" value="$(arg spherical_camera_ns)" />
      </include>
    </group>
  </group>

  <!-- launch mask rcnn -->
  <include file="$(find eus_vive)/launch/include/mask_rcnn.launch" if="$(arg mask_rcnn)" >
    <arg name="INPUT_IMAGE" value="/$(arg camera_ns)/color/image_rect_color" />
  </include>

  <!-- launch respeaker -->
  <include file="$(find eus_vive)/launch/include/respeaker.launch" if="$(arg respeaker)" />

  <!-- launch status visualizer -->
  <node name="eus_vive_status_visualizer" if="$(arg launch_xdisplay)"
        pkg="eus_vive" type="eus_vive_status_visualizer.py"
        output="screen" >
    <remap from="~input/image" to="/eus_vive/irtviewer/image" />
    <remap from="~input/status" to="/eus_vive/status" />
  </node>
  <node name="irtviewer_xdisplay" if="$(arg launch_xdisplay)"
        pkg="jsk_baxter_startup" type="xdisplay_image_topic.py"
        args="/eus_vive_status_visualizer/output/image"
        output="screen" >
    <rosparam subst_value="true">
      max_width: $(arg xdisplay_max_width)
      max_height: $(arg xdisplay_max_height)
    </rosparam>
  </node>

  <!-- launch logging -->
  <include file="$(find eus_vive)/launch/baxter/baxter_logging.launch" if="$(arg logging)">
    <arg name="twitter" value="$(arg twitter)" />
    <arg name="influxdb" value="$(arg influxdb)" />
    <arg name="debug" value="$(arg debug)" />
    <arg name="camera" value="$(arg realsense_camera)" />
    <arg name="camera_ns" value="$(arg camera_ns)" />
    <arg name="spherical_camera" value="$(arg spherical_camera)" />
    <arg name="spherical_stereo" value="$(arg spherical_stereo)" />
    <arg name="spherical_camera_ns" value="$(arg spherical_camera_ns)" />
    <arg name="spherical_left_camera_ns" value="$(arg spherical_left_camera_ns)" />
    <arg name="spherical_right_camera_ns" value="$(arg spherical_right_camera_ns)" />
    <arg name="twitter_image_topics" value="$(arg twitter_image_topic)" />
    <arg name="home_dir" value="$(arg home_dir)" />
  </include>

</launch>
